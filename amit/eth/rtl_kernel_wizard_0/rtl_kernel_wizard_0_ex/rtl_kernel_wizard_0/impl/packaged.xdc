
####################################################################################
# Generated by Vivado 2020.2 built on 'Wed Nov 18 09:12:47 MST 2020' by 'xbuild'
# Command Used: write_xdc /.aux_mnt/fpgdeva/casperlibs/vitis/workspace/rtl_u280_kernel/vivado_rtl_kernel/rtl_kernel_wizard_0_ex/rtl_kernel_wizard_0_ex.runs/synth_1/packaged.xdc
####################################################################################


####################################################################################
# Constraints from file : 'ila.xdc'
####################################################################################

##
## ARM and HALT transfer false paths
##
current_instance inst_design_1/ila_1/inst
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer*/din_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer*/dout_reg0_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_in_transfer_inst/dout_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_in_transfer_inst/temp_reg0_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.halt_in_transfer_inst/dout_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.halt_in_transfer_inst/temp_reg0_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.halt_out_transfer_inst/dout_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.halt_out_transfer_inst/temp_reg0_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_out_transfer_inst/dout_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_out_transfer_inst/temp_reg0_reg*" && IS_SEQUENTIAL }]

##
## ILA Register False Paths
##
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_*/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL } ]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/iscnt_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/iwcnt_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_7/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_7/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_7/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_CDONE/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_NS0/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_NS1/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/icap_wr_en_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/itrigger_out_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_15/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/use_probe_debug_circuit_2_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_15/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/en_adv_trigger_2_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/en_adv_trigger_2_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/capture_qual_ctrl_2_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_stream_ffd/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/debug_data_in_sync1_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/*.cfg_data_vec_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/cfg_data_vec_sync1_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/s_dclk_flag_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/s_dclk_flag_sync1_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/ila_clk_flag_sync1_reg*" && IS_SEQUENTIAL}]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/s_dclk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/next_state_ila_reg*" && IS_SEQUENTIAL} ]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/s_dclk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL} ]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/s_dclk_flag_reg*" && IS_SEQUENTIAL} ]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/clk_lost_reg*" && IS_SEQUENTIAL} ]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/next_state_xsdb_reg*" && IS_SEQUENTIAL} ]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/clk_lost_cnt_reg[*]*" && IS_SEQUENTIAL} ]
set _xlnx_shared_i0 [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_trig/U_TM/N_DDR_MODE.G_NMU[*].U_M/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/probeDelay1_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/reg_stream_ffd/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL}] -to $_xlnx_shared_i0
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_15/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to $_xlnx_shared_i0

##
## Match Unit Configuration to Match Output false path
##
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg*" && IS_SEQUENTIAL}]]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK}] -to [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg/D}]

##
## ILA Capture Block False Paths
##

set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/*cfg_data_vec_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/*icap_addr_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/captured_samples*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg*/I_EN_STAT_EQ1.U_STAT/xsdb_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/CAP_DONE_O*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg*/I_EN_STAT_EQ1.U_STAT/xsdb_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/CAP_TRIGGER_O*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg*/I_EN_STAT_EQ1.U_STAT/xsdb_reg*" && IS_SEQUENTIAL }]

##
## ILA Capture State to XSDB register False Paths
##
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_NS*/I_YESLUT6.I_YES_OREG.O_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_*/I_EN_STAT_EQ1.U_STAT/xsdb_reg_reg[*]*" && IS_SEQUENTIAL }]

##
## ILA Sample Counter Match Condition out False Paths
##
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]
#set_false_path -from [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL } ]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]

##
## ILA Window Counter Match Condition out False Paths
##
#set_false_path -from [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL } ]
#set_false_path -from [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL } ]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WHCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WLCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/iscnt_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/icap_wr_en_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCRST/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/iscnt_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WCE/I_YESLUT6.U_SRLC16E*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/iwcnt_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_CDONE/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_CDONE/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_NS0/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_NS0/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_NS1/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_NS1/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]




##
## Waivers
##
#create_waiver -internal -scope -type CDC -id CDC-1 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/ila_clk_flag_reg*"} ]] -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/s_dclk_flag_reg*"} ]]
#create_waiver -internal -scope -type CDC -id CDC-1 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/ila_clk_flag_reg*"} ]] -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/next_state_xsdb_reg*"} ]]
#create_waiver -internal -scope -type CDC -id CDC-1 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/ila_clk_flag_reg*"} ]] -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/clk_lost_reg*"} ]]
#create_waiver -internal -scope -type CDC -id CDC-1 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/s_dclk_flag_reg*"} ]] -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/next_state_ila_reg*"} ]]
#create_waiver -internal -scope -type CDC -id CDC-1 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/s_dclk_flag_reg*"} ]] -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/ila_clk_flag_reg*"} ]]
#create_waiver -internal -scope -type CDC -id CDC-15 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/ila_clk_flag_reg*"} ]]  -to [get_pins -filter {REF_PIN_NAME=~R} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/clk_lost_cnt_reg[*]*"} ]]



####################################################################################
# Constraints from file : 'bd_483c_psr_aclk_0.xdc'
####################################################################################


# file: bd_483c_psr_aclk_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/clk_map/psr_aclk/U0
set_false_path -to [get_pins -hier *cdc_to*/D]


####################################################################################
# Constraints from file : 'bd_483c_psr_aclk_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'bd_48ac_psr_aclk_0.xdc'
####################################################################################


# file: bd_48ac_psr_aclk_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/clk_map/psr_aclk/U0
set_false_path -to [get_pins -hier *cdc_to*/D]


####################################################################################
# Constraints from file : 'bd_48ac_psr_aclk_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'design_1_proc_sys_reset_1_0.xdc'
####################################################################################


# file: design_1_proc_sys_reset_1_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
current_instance inst_design_1/proc_sys_reset_1/U0
set_false_path -to [get_pins -hier *cdc_to*/D]


####################################################################################
# Constraints from file : 'design_1_proc_sys_reset_1_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'design_1_proc_sys_reset_0_0.xdc'
####################################################################################


# file: design_1_proc_sys_reset_0_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
current_instance inst_design_1/proc_sys_reset_0/U0
set_false_path -to [get_pins -hier *cdc_to*/D]


####################################################################################
# Constraints from file : 'design_1_proc_sys_reset_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'design_1_cmac_usplus_0_0_gt.xdc'
####################################################################################

#------------------------------------------------------------------------------
#  (c) Copyright 2013-2018 Xilinx, Inc. All rights reserved.
#
#  This file contains confidential and proprietary information
#  of Xilinx, Inc. and is protected under U.S. and
#  international copyright and other intellectual property
#  laws.
#
#  DISCLAIMER
#  This disclaimer is not a license and does not grant any
#  rights to the materials distributed herewith. Except as
#  otherwise provided in a valid license issued to you by
#  Xilinx, and to the maximum extent permitted by applicable
#  law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#  WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#  AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#  BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#  INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#  (2) Xilinx shall not be liable (whether in contract or tort,
#  including negligence, or under any other theory of
#  liability) for any loss or damage of any kind or nature
#  related to, arising under or in connection with these
#  materials, including for any direct, or any indirect,
#  special, incidental, or consequential loss or damage
#  (including loss of data, profits, goodwill, or any type of
#  loss or damage suffered as a result of any action brought
#  by a third party) even if such damage or loss was
#  reasonably foreseeable or Xilinx had been advised of the
#  possibility of the same.
#
#  CRITICAL APPLICATIONS
#  Xilinx products are not designed or intended to be fail-
#  safe, or for use in any application requiring fail-safe
#  performance, such as life-support or safety devices or
#  systems, Class III medical devices, nuclear facilities,
#  applications related to the deployment of airbags, or any
#  other applications that could lead to death, personal
#  injury, or severe property or environmental damage
#  (individually and collectively, "Critical
#  Applications"). Customer assumes the sole risk and
#  liability of any use of Xilinx products in Critical
#  Applications, subject only to applicable laws and
#  regulations governing limitations on product liability.
#
#  THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#  PART OF THIS FILE AT ALL TIMES.
#------------------------------------------------------------------------------


# UltraScale FPGAs Transceivers Wizard IP core-level XDC file
# ----------------------------------------------------------------------------------------------------------------------

# Commands for enabled transceiver GTYE4_CHANNEL_X0Y40
# ----------------------------------------------------------------------------------------------------------------------

# Channel primitive location constraint
current_instance -quiet
current_instance inst_design_1/cmac_usplus_0/inst/design_1_cmac_usplus_0_0_gt_i/inst
set_property LOC GTYE4_CHANNEL_X0Y40 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[10].*gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST}]

# Channel primitive serial data pin location constraints
# (Provided as comments for your reference. The channel primitive location constraint is sufficient.)
#set_property package_pin L54 [get_ports gtyrxn_in[0]]
#set_property package_pin L53 [get_ports gtyrxp_in[0]]
#set_property package_pin L49 [get_ports gtytxn_out[0]]
#set_property package_pin L48 [get_ports gtytxp_out[0]]
##set_false_path -through [get_pins -filter {REF_PIN_NAME=~*Q} -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[0].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet
set_case_analysis 1 [get_pins -filter REF_PIN_NAME=~*Q -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[0].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet

# Commands for enabled transceiver GTYE4_CHANNEL_X0Y41
# ----------------------------------------------------------------------------------------------------------------------

# Channel primitive location constraint
set_property LOC GTYE4_CHANNEL_X0Y41 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[10].*gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST}]

# Channel primitive serial data pin location constraints
# (Provided as comments for your reference. The channel primitive location constraint is sufficient.)
#set_property package_pin K52 [get_ports gtyrxn_in[1]]
#set_property package_pin K51 [get_ports gtyrxp_in[1]]
#set_property package_pin L45 [get_ports gtytxn_out[1]]
#set_property package_pin L44 [get_ports gtytxp_out[1]]
##set_false_path -through [get_pins -filter {REF_PIN_NAME=~*Q} -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[1].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet
set_case_analysis 1 [get_pins -filter REF_PIN_NAME=~*Q -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[1].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet

# Commands for enabled transceiver GTYE4_CHANNEL_X0Y42
# ----------------------------------------------------------------------------------------------------------------------

# Channel primitive location constraint
set_property LOC GTYE4_CHANNEL_X0Y42 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[10].*gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST}]

# Channel primitive serial data pin location constraints
# (Provided as comments for your reference. The channel primitive location constraint is sufficient.)
#set_property package_pin J54 [get_ports gtyrxn_in[2]]
#set_property package_pin J53 [get_ports gtyrxp_in[2]]
#set_property package_pin K47 [get_ports gtytxn_out[2]]
#set_property package_pin K46 [get_ports gtytxp_out[2]]
##set_false_path -through [get_pins -filter {REF_PIN_NAME=~*Q} -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[2].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet
set_case_analysis 1 [get_pins -filter REF_PIN_NAME=~*Q -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[2].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet

# Commands for enabled transceiver GTYE4_CHANNEL_X0Y43
# ----------------------------------------------------------------------------------------------------------------------

# Channel primitive location constraint
set_property LOC GTYE4_CHANNEL_X0Y43 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[10].*gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST}]

# Channel primitive serial data pin location constraints
# (Provided as comments for your reference. The channel primitive location constraint is sufficient.)
#set_property package_pin H52 [get_ports gtyrxn_in[3]]
#set_property package_pin H51 [get_ports gtyrxp_in[3]]
#set_property package_pin J49 [get_ports gtytxn_out[3]]
#set_property package_pin J48 [get_ports gtytxp_out[3]]
##set_false_path -through [get_pins -filter {REF_PIN_NAME=~*Q} -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[3].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet
set_case_analysis 1 [get_pins -filter REF_PIN_NAME=~*Q -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[3].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet


# False path constraints
# ----------------------------------------------------------------------------------------------------------------------

set_false_path -to [get_cells -hierarchical -filter {NAME =~ *bit_synchronizer*inst/i_in_meta_reg}] -quiet

##set_false_path -to [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_*_reg}] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*D -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync1*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync2*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync3*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_out*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync1*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync2*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync3*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_out*}]] -quiet



####################################################################################
# Constraints from file : 'ila_impl.xdc'
####################################################################################

##
## Match Unit Configuration to Match Output false path
##

current_instance -quiet
current_instance inst_design_1/ila_1/inst
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK* -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*"}]] -to [get_pins -filter REF_PIN_NAME=~D* -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg*"}]]

##
## ILA Sample Counter Match Condition out False Paths
##
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK* -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]

##
## ILA Window Counter Match Condition out False Paths
##
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK* -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK* -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]


create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_CDONE/I_YESLUT6.U_SRL32_*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_CDONE/I_YESLUT6.I_YES_OREG.O_reg_reg*"}]] -timestamp "Thu Mar 18 12:27:46 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_NS1/I_YESLUT6.U_SRL32_*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_NS1/I_YESLUT6.I_YES_OREG.O_reg_reg*"}]] -timestamp "Thu Mar 18 12:27:46 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_NS0/I_YESLUT6.U_SRL32_*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_NS0/I_YESLUT6.I_YES_OREG.O_reg_reg*"}]] -timestamp "Thu Mar 18 12:27:46 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WCE/I_YESLUT6.U_SRLC16E*"}]] -to [get_pins -filter REF_PIN_NAME=~CE -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/iwcnt_reg[*]*"}]] -timestamp "Thu Mar 18 12:27:46 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E*"}]] -to [get_pins -filter REF_PIN_NAME=~CE -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/iscnt_reg[*]*"}]] -timestamp "Thu Mar 18 12:27:46 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_pins -filter REF_PIN_NAME=~CE -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*"}]] -timestamp "Thu Mar 18 12:27:46 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WHCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_pins -filter REF_PIN_NAME=~CE -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*"}]] -timestamp "Thu Mar 18 12:27:46 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WLCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_pins -filter REF_PIN_NAME=~CE -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*"}]] -timestamp "Thu Mar 18 12:27:46 GMT 2021"
create_waiver -type CDC -id {CDC-10} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg*"}]] -timestamp "Thu Mar 18 12:27:46 GMT 2021"
#create_waiver -internal -scope -type CDC -id CDC-10 -from [get_pins -filter {REF_PIN_NAME=~CLK} -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_trig/N_DDR_TC.N_DDR_TC_INST[*].U_TC/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srlD/S1*"}]]  -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_trig/N_DDR_TC.N_DDR_TC_INST[*].U_TC/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg*"}]]  -tags "1037291" -user "xsdbm" -description {CDC is handled through handshake process}
create_waiver -type CDC -id {CDC-10} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/icap_wr_en_reg*"}]] -timestamp "Thu Mar 18 12:27:46 GMT 2021"



####################################################################################
# Constraints from file : 'ila.xdc'
####################################################################################

##
## ARM and HALT transfer false paths
##
current_instance -quiet
current_instance inst_design_1/ila_0/inst
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer*/din_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer*/dout_reg0_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_in_transfer_inst/dout_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_in_transfer_inst/temp_reg0_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.halt_in_transfer_inst/dout_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.halt_in_transfer_inst/temp_reg0_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.halt_out_transfer_inst/dout_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.halt_out_transfer_inst/temp_reg0_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_out_transfer_inst/dout_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_out_transfer_inst/temp_reg0_reg*" && IS_SEQUENTIAL }]

##
## ILA Register False Paths
##
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_*/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL } ]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/iscnt_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/iwcnt_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_7/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_7/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_7/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_CDONE/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_NS0/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_NS1/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/icap_wr_en_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/itrigger_out_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_15/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/use_probe_debug_circuit_2_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_15/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/en_adv_trigger_2_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/en_adv_trigger_2_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_1a/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/capture_qual_ctrl_2_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_stream_ffd/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/debug_data_in_sync1_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/*.cfg_data_vec_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/cfg_data_vec_sync1_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/s_dclk_flag_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/s_dclk_flag_sync1_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/ila_clk_flag_sync1_reg*" && IS_SEQUENTIAL}]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/s_dclk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/next_state_ila_reg*" && IS_SEQUENTIAL} ]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/s_dclk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL} ]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/s_dclk_flag_reg*" && IS_SEQUENTIAL} ]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/clk_lost_reg*" && IS_SEQUENTIAL} ]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/next_state_xsdb_reg*" && IS_SEQUENTIAL} ]
#set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/ila_clk_flag_reg*" && IS_SEQUENTIAL } ] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/clk_lost_cnt_reg[*]*" && IS_SEQUENTIAL} ]
set_false_path -from [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_regs/reg_stream_ffd/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL}] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_trig/U_TM/N_DDR_MODE.G_NMU[*].U_M/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/probeDelay1_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_15/I_EN_CTL_EQ1.U_CTL/xsdb_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_trig/U_TM/N_DDR_MODE.G_NMU[*].U_M/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/probeDelay1_reg*" && IS_SEQUENTIAL}]

##
## Match Unit Configuration to Match Output false path
##
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg*" && IS_SEQUENTIAL}]]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK}] -to [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg/D}]

##
## ILA Capture Block False Paths
##

set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/*cfg_data_vec_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/*icap_addr_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/captured_samples*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg*/I_EN_STAT_EQ1.U_STAT/xsdb_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/CAP_DONE_O*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg*/I_EN_STAT_EQ1.U_STAT/xsdb_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/CAP_TRIGGER_O*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg*/I_EN_STAT_EQ1.U_STAT/xsdb_reg*" && IS_SEQUENTIAL }]

##
## ILA Capture State to XSDB register False Paths
##
set_false_path -from [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_NS*/I_YESLUT6.I_YES_OREG.O_reg_reg*" && IS_SEQUENTIAL }] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_*/I_EN_STAT_EQ1.U_STAT/xsdb_reg_reg[*]*" && IS_SEQUENTIAL }]

##
## ILA Sample Counter Match Condition out False Paths
##
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]
#set_false_path -from [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL } ]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]

##
## ILA Window Counter Match Condition out False Paths
##
#set_false_path -from [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL } ]
#set_false_path -from [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL } ]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WHCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WLCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/iscnt_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/icap_wr_en_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCRST/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/iscnt_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WCE/I_YESLUT6.U_SRLC16E*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/iwcnt_reg*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_CDONE/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_CDONE/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_NS0/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_NS0/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_NS1/I_YESLUT6.U_SRL32_*" }]] -to [get_cells -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/U_NS1/I_YESLUT6.I_YES_OREG.O_reg*" && IS_SEQUENTIAL}]




##
## Waivers
##
#create_waiver -internal -scope -type CDC -id CDC-1 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/ila_clk_flag_reg*"} ]] -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/s_dclk_flag_reg*"} ]]
#create_waiver -internal -scope -type CDC -id CDC-1 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/ila_clk_flag_reg*"} ]] -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/next_state_xsdb_reg*"} ]]
#create_waiver -internal -scope -type CDC -id CDC-1 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/ila_clk_flag_reg*"} ]] -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/clk_lost_reg*"} ]]
#create_waiver -internal -scope -type CDC -id CDC-1 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/s_dclk_flag_reg*"} ]] -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/next_state_ila_reg*"} ]]
#create_waiver -internal -scope -type CDC -id CDC-1 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/s_dclk_flag_reg*"} ]] -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/ila_clk_flag_reg*"} ]]
#create_waiver -internal -scope -type CDC -id CDC-15 -description {The cross clock communication is handled through hand shake process} -tags "1025927" -user "ila" -from [get_pins -filter {REF_PIN_NAME=~C} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/ila_clk_flag_reg*"} ]]  -to [get_pins -filter {REF_PIN_NAME=~R} -of_objects [get_cells -hierarchical -filter { NAME =~ "*/ila_core_inst/u_ila_regs/clk_lost_cnt_reg[*]*"} ]]



####################################################################################
# Constraints from file : 'ila_impl.xdc'
####################################################################################

##
## Match Unit Configuration to Match Output false path
##

set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK* -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*"}]] -to [get_pins -filter REF_PIN_NAME=~D* -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg*"}]]

##
## ILA Sample Counter Match Condition out False Paths
##
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK* -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*" && IS_SEQUENTIAL }]

##
## ILA Window Counter Match Condition out False Paths
##
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK* -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*" && IS_SEQUENTIAL }]
set_false_path -from [get_pins -filter REF_PIN_NAME=~CLK* -of_objects [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*"}]] -to [get_cells -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*" && IS_SEQUENTIAL }]


create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_CDONE/I_YESLUT6.U_SRL32_*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_CDONE/I_YESLUT6.I_YES_OREG.O_reg_reg*"}]] -timestamp "Thu Mar 18 12:27:47 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_NS1/I_YESLUT6.U_SRL32_*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_NS1/I_YESLUT6.I_YES_OREG.O_reg_reg*"}]] -timestamp "Thu Mar 18 12:27:47 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_NS0/I_YESLUT6.U_SRL32_*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/U_NS0/I_YESLUT6.I_YES_OREG.O_reg_reg*"}]] -timestamp "Thu Mar 18 12:27:47 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WCE/I_YESLUT6.U_SRLC16E*"}]] -to [get_pins -filter REF_PIN_NAME=~CE -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/iwcnt_reg[*]*"}]] -timestamp "Thu Mar 18 12:27:47 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E*"}]] -to [get_pins -filter REF_PIN_NAME=~CE -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/iscnt_reg[*]*"}]] -timestamp "Thu Mar 18 12:27:47 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_pins -filter REF_PIN_NAME=~CE -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp_q*"}]] -timestamp "Thu Mar 18 12:27:47 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WHCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_pins -filter REF_PIN_NAME=~CE -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp_q*"}]] -timestamp "Thu Mar 18 12:27:47 GMT 2021"
create_waiver -type CDC -id {CDC-1} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WLCMPCE/I_YESLUT6.U_SRL32*"}]] -to [get_pins -filter REF_PIN_NAME=~CE -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp_q*"}]] -timestamp "Thu Mar 18 12:27:47 GMT 2021"
create_waiver -type CDC -id {CDC-10} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg*"}]] -timestamp "Thu Mar 18 12:27:47 GMT 2021"
#create_waiver -internal -scope -type CDC -id CDC-10 -from [get_pins -filter {REF_PIN_NAME=~CLK} -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_trig/N_DDR_TC.N_DDR_TC_INST[*].U_TC/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srlD/S1*"}]]  -to [get_pins -filter {REF_PIN_NAME=~D} -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_trig/N_DDR_TC.N_DDR_TC_INST[*].U_TC/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg*"}]]  -tags "1037291" -user "xsdbm" -description {CDC is handled through handshake process}
create_waiver -type CDC -id {CDC-10} -user "xsdbm" -desc "CDC is handled through handshake process" -tags "1037291" -scope -internal -from [get_pins -filter REF_PIN_NAME=~CLK -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E*"}]] -to [get_pins -filter REF_PIN_NAME=~D -of_objects [get_cells -hierarchical -filter {NAME =~ "*u_ila_cap_ctrl/u_cap_addrgen/icap_wr_en_reg*"}]] -timestamp "Thu Mar 18 12:27:47 GMT 2021"



####################################################################################
# Constraints from file : 'design_1_cmac_usplus_1_0.xdc'
####################################################################################

#------------------------------------------------------------------------------
#  (c) Copyright 2013 Xilinx, Inc. All rights reserved.
#
#  This file contains confidential and proprietary information
#  of Xilinx, Inc. and is protected under U.S. and
#  international copyright and other intellectual property
#  laws.
#
#  DISCLAIMER
#  This disclaimer is not a license and does not grant any
#  rights to the materials distributed herewith. Except as
#  otherwise provided in a valid license issued to you by
#  Xilinx, and to the maximum extent permitted by applicable
#  law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#  WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#  AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#  BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#  INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#  (2) Xilinx shall not be liable (whether in contract or tort,
#  including negligence, or under any other theory of
#  liability) for any loss or damage of any kind or nature
#  related to, arising under or in connection with these
#  materials, including for any direct, or any indirect,
#  special, incidental, or consequential loss or damage
#  (including loss of data, profits, goodwill, or any type of
#  loss or damage suffered as a result of any action brought
#  by a third party) even if such damage or loss was
#  reasonably foreseeable or Xilinx had been advised of the
#  possibility of the same.
#
#  CRITICAL APPLICATIONS
#  Xilinx products are not designed or intended to be fail-
#  safe, or for use in any application requiring fail-safe
#  performance, such as life-support or safety devices or
#  systems, Class III medical devices, nuclear facilities,
#  applications related to the deployment of airbags, or any
#  other applications that could lead to death, personal
#  injury, or severe property or environmental damage
#  (individually and collectively, "Critical
#  Applications"). Customer assumes the sole risk and
#  liability of any use of Xilinx products in Critical
#  Applications, subject only to applicable laws and
#  regulations governing limitations on product liability.
#
#  THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#  PART OF THIS FILE AT ALL TIMES.
#------------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# CMAC core-level XDC file
# -----------------------------------------------------------------------------

# Constraints to fix the CMAC core
current_instance -quiet
current_instance inst_design_1/cmac_usplus_1/inst
set_property LOC CMACE4_X0Y7 [get_cells -hierarchical -filter {NAME =~ *inst/i_design_1_cmac_usplus_1_0_top/* && REF_NAME==CMACE4}]

current_instance -quiet
create_clock -period 6.400 [get_ports gt1_ref_clk_p]

current_instance inst_design_1/cmac_usplus_1/inst
set_false_path -to [get_pins -leaf -of_objects [get_cells -hier *cdc_to* -filter is_sequential] -filter NAME=~*cmac_cdc*/*/D]

current_instance -quiet
set_false_path -to [get_pins yiF3finst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_RESET~]
set_false_path -to [get_pins QFhtfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fTX_RESET~]
set_false_path -to [get_pins [list {3oTUfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[9]~} {6e4Wfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[8]~} {1KlKfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[7]~} {48OIfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[6]~} {un3Ofinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[5]~} {jRcMfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[4]~} {CAFDfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[3]~} {P2uBfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[2]~} {ZtXHfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[1]~} {Ub8Ffinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[0]~}]]
set_false_path -to [get_pins 7gI3finst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fCTL_RX_ENABLE_PPP~]
set_false_path -to [get_pins M91cfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fCTL_RX_CHECK_SA_PPP~]
set_false_path -to [get_pins 5ZpHfinst_design_1~fcmac_usplus_1~finst~fi_design_1_cmac_usplus_1_0_top~tobsibdaaf4ker2wujpra0sjb~fCTL_RX_CHECK_OPCODE_PPP~]
current_instance inst_design_1/cmac_usplus_1/inst
set_false_path -to [get_cells -hierarchical -filter {NAME =~ */*_sync*/*d2_cdc_to*}]






create_waiver -type CDC -id {CDC-10} -user "cmac_usplus" -desc "The CDC-10 warning is waived as this is on the reset path and safe to ignore" -tags "10930" -scope -internal -from [get_pins -of [get_cells -hier -filter {name =~ */inst/*/*out_d*}] -filter {name =~ *C}] -to [get_pins -of [get_cells -hier -filter {name =~ */inst/*cdc_sync_*x_reset_done_init_clk/*cdc_to*}] -filter {name =~ *D}] -timestamp "Thu Mar 18 12:27:47 GMT 2021"





create_waiver -type CDC -id {CDC-13} -user "cmac_usplus" -desc "The CDC-13 warning is waived, this is on the reset path and safe to ignore" -tags "10930" -scope -internal -to [get_pins -hier -filter {name =~ */*top*/*/*SERDES_RESET*}] -timestamp "Thu Mar 18 12:27:47 GMT 2021"


create_waiver -type CDC -id {CDC-13} -user "cmac_usplus" -desc "The CDC-13 warning is waived; Syncer is available in this path but it is falsely reported by the tool" -tags "10930" -scope -internal -from [get_pins -of [get_cells -hier -filter {name =~ */inst/*cmac_cdc_sync*/s_out_d*}] -filter {name =~ *C}] -timestamp "Thu Mar 18 12:27:47 GMT 2021"




####################################################################################
# Constraints from file : 'design_1_cmac_usplus_1_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'design_1_cmac_usplus_1_0_gt.xdc'
####################################################################################

#------------------------------------------------------------------------------
#  (c) Copyright 2013-2018 Xilinx, Inc. All rights reserved.
#
#  This file contains confidential and proprietary information
#  of Xilinx, Inc. and is protected under U.S. and
#  international copyright and other intellectual property
#  laws.
#
#  DISCLAIMER
#  This disclaimer is not a license and does not grant any
#  rights to the materials distributed herewith. Except as
#  otherwise provided in a valid license issued to you by
#  Xilinx, and to the maximum extent permitted by applicable
#  law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#  WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#  AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#  BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#  INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#  (2) Xilinx shall not be liable (whether in contract or tort,
#  including negligence, or under any other theory of
#  liability) for any loss or damage of any kind or nature
#  related to, arising under or in connection with these
#  materials, including for any direct, or any indirect,
#  special, incidental, or consequential loss or damage
#  (including loss of data, profits, goodwill, or any type of
#  loss or damage suffered as a result of any action brought
#  by a third party) even if such damage or loss was
#  reasonably foreseeable or Xilinx had been advised of the
#  possibility of the same.
#
#  CRITICAL APPLICATIONS
#  Xilinx products are not designed or intended to be fail-
#  safe, or for use in any application requiring fail-safe
#  performance, such as life-support or safety devices or
#  systems, Class III medical devices, nuclear facilities,
#  applications related to the deployment of airbags, or any
#  other applications that could lead to death, personal
#  injury, or severe property or environmental damage
#  (individually and collectively, "Critical
#  Applications"). Customer assumes the sole risk and
#  liability of any use of Xilinx products in Critical
#  Applications, subject only to applicable laws and
#  regulations governing limitations on product liability.
#
#  THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#  PART OF THIS FILE AT ALL TIMES.
#------------------------------------------------------------------------------


# UltraScale FPGAs Transceivers Wizard IP core-level XDC file
# ----------------------------------------------------------------------------------------------------------------------

# Commands for enabled transceiver GTYE4_CHANNEL_X0Y44
# ----------------------------------------------------------------------------------------------------------------------

# Channel primitive location constraint
current_instance -quiet
current_instance inst_design_1/cmac_usplus_1/inst/design_1_cmac_usplus_1_0_gt_i/inst
set_property LOC GTYE4_CHANNEL_X0Y44 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[11].*gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST}]

# Channel primitive serial data pin location constraints
# (Provided as comments for your reference. The channel primitive location constraint is sufficient.)
#set_property package_pin G54 [get_ports gtyrxn_in[0]]
#set_property package_pin G53 [get_ports gtyrxp_in[0]]
#set_property package_pin G49 [get_ports gtytxn_out[0]]
#set_property package_pin G48 [get_ports gtytxp_out[0]]
##set_false_path -through [get_pins -filter {REF_PIN_NAME=~*Q} -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[0].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet
set_case_analysis 1 [get_pins -filter REF_PIN_NAME=~*Q -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[0].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet

# Commands for enabled transceiver GTYE4_CHANNEL_X0Y45
# ----------------------------------------------------------------------------------------------------------------------

# Channel primitive location constraint
set_property LOC GTYE4_CHANNEL_X0Y45 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[11].*gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST}]

# Channel primitive serial data pin location constraints
# (Provided as comments for your reference. The channel primitive location constraint is sufficient.)
#set_property package_pin F52 [get_ports gtyrxn_in[1]]
#set_property package_pin F51 [get_ports gtyrxp_in[1]]
#set_property package_pin E49 [get_ports gtytxn_out[1]]
#set_property package_pin E48 [get_ports gtytxp_out[1]]
##set_false_path -through [get_pins -filter {REF_PIN_NAME=~*Q} -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[1].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet
set_case_analysis 1 [get_pins -filter REF_PIN_NAME=~*Q -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[1].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet

# Commands for enabled transceiver GTYE4_CHANNEL_X0Y46
# ----------------------------------------------------------------------------------------------------------------------

# Channel primitive location constraint
set_property LOC GTYE4_CHANNEL_X0Y46 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[11].*gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST}]

# Channel primitive serial data pin location constraints
# (Provided as comments for your reference. The channel primitive location constraint is sufficient.)
#set_property package_pin E54 [get_ports gtyrxn_in[2]]
#set_property package_pin E53 [get_ports gtyrxp_in[2]]
#set_property package_pin C49 [get_ports gtytxn_out[2]]
#set_property package_pin C48 [get_ports gtytxp_out[2]]
##set_false_path -through [get_pins -filter {REF_PIN_NAME=~*Q} -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[2].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet
set_case_analysis 1 [get_pins -filter REF_PIN_NAME=~*Q -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[2].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet

# Commands for enabled transceiver GTYE4_CHANNEL_X0Y47
# ----------------------------------------------------------------------------------------------------------------------

# Channel primitive location constraint
set_property LOC GTYE4_CHANNEL_X0Y47 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[11].*gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST}]

# Channel primitive serial data pin location constraints
# (Provided as comments for your reference. The channel primitive location constraint is sufficient.)
#set_property package_pin D52 [get_ports gtyrxn_in[3]]
#set_property package_pin D51 [get_ports gtyrxp_in[3]]
#set_property package_pin A50 [get_ports gtytxn_out[3]]
#set_property package_pin A49 [get_ports gtytxp_out[3]]
##set_false_path -through [get_pins -filter {REF_PIN_NAME=~*Q} -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[3].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet
set_case_analysis 1 [get_pins -filter REF_PIN_NAME=~*Q -of_objects [get_cells -hierarchical -filter {NAME =~ *gen_pwrgood_delay_inst[3].delay_powergood_inst/gen_powergood_delay.pwr_on_fsm*}]] -quiet


# False path constraints
# ----------------------------------------------------------------------------------------------------------------------

set_false_path -to [get_cells -hierarchical -filter {NAME =~ *bit_synchronizer*inst/i_in_meta_reg}] -quiet

##set_false_path -to [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_*_reg}] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*D -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync1*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync2*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync3*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_out*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync1*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync2*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync3*}]] -quiet
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_out*}]] -quiet



####################################################################################
# Constraints from file : 'design_1_cmac_usplus_0_0.xdc'
####################################################################################

#------------------------------------------------------------------------------
#  (c) Copyright 2013 Xilinx, Inc. All rights reserved.
#
#  This file contains confidential and proprietary information
#  of Xilinx, Inc. and is protected under U.S. and
#  international copyright and other intellectual property
#  laws.
#
#  DISCLAIMER
#  This disclaimer is not a license and does not grant any
#  rights to the materials distributed herewith. Except as
#  otherwise provided in a valid license issued to you by
#  Xilinx, and to the maximum extent permitted by applicable
#  law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#  WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#  AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#  BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#  INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#  (2) Xilinx shall not be liable (whether in contract or tort,
#  including negligence, or under any other theory of
#  liability) for any loss or damage of any kind or nature
#  related to, arising under or in connection with these
#  materials, including for any direct, or any indirect,
#  special, incidental, or consequential loss or damage
#  (including loss of data, profits, goodwill, or any type of
#  loss or damage suffered as a result of any action brought
#  by a third party) even if such damage or loss was
#  reasonably foreseeable or Xilinx had been advised of the
#  possibility of the same.
#
#  CRITICAL APPLICATIONS
#  Xilinx products are not designed or intended to be fail-
#  safe, or for use in any application requiring fail-safe
#  performance, such as life-support or safety devices or
#  systems, Class III medical devices, nuclear facilities,
#  applications related to the deployment of airbags, or any
#  other applications that could lead to death, personal
#  injury, or severe property or environmental damage
#  (individually and collectively, "Critical
#  Applications"). Customer assumes the sole risk and
#  liability of any use of Xilinx products in Critical
#  Applications, subject only to applicable laws and
#  regulations governing limitations on product liability.
#
#  THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#  PART OF THIS FILE AT ALL TIMES.
#------------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# CMAC core-level XDC file
# -----------------------------------------------------------------------------

# Constraints to fix the CMAC core
current_instance -quiet
current_instance inst_design_1/cmac_usplus_0/inst
set_property LOC CMACE4_X0Y5 [get_cells -hierarchical -filter {NAME =~ *inst/i_design_1_cmac_usplus_0_0_top/* && REF_NAME==CMACE4}]

current_instance -quiet
create_clock -period 6.400 [get_ports gt_ref_clk_p]

current_instance inst_design_1/cmac_usplus_0/inst
set_false_path -to [get_pins -leaf -of_objects [get_cells -hier *cdc_to* -filter is_sequential] -filter NAME=~*cmac_cdc*/*/D]

current_instance -quiet
set_false_path -to [get_pins lqgdfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_RESET~]
set_false_path -to [get_pins HNEHfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fTX_RESET~]
set_false_path -to [get_pins [list {Ah/Ffinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[9]~} {NXUHfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[8]~} {CDJbfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[7]~} {P1iZfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[6]~} {Zubffinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[5]~} {UYwdfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[4]~} {1JpSfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[3]~} {4/CQfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[2]~} {uk7Wfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[1]~} {jSQUfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fRX_SERDES_RESET[0]~}]]
set_false_path -to [get_pins Lm5ufinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fCTL_RX_ENABLE_PPP~]
set_false_path -to [get_pins V1Kifinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fCTL_RX_CHECK_SA_PPP~]
set_false_path -to [get_pins jvRSfinst_design_1~fcmac_usplus_0~finst~fi_design_1_cmac_usplus_0_0_top~tobsibdaaf4ker2wujpra0sjb~fCTL_RX_CHECK_OPCODE_PPP~]
current_instance inst_design_1/cmac_usplus_0/inst
set_false_path -to [get_cells -hierarchical -filter {NAME =~ */*_sync*/*d2_cdc_to*}]






create_waiver -type CDC -id {CDC-10} -user "cmac_usplus" -desc "The CDC-10 warning is waived as this is on the reset path and safe to ignore" -tags "10930" -scope -internal -from [get_pins -of [get_cells -hier -filter {name =~ */inst/*/*out_d*}] -filter {name =~ *C}] -to [get_pins -of [get_cells -hier -filter {name =~ */inst/*cdc_sync_*x_reset_done_init_clk/*cdc_to*}] -filter {name =~ *D}] -timestamp "Thu Mar 18 12:27:48 GMT 2021"





create_waiver -type CDC -id {CDC-13} -user "cmac_usplus" -desc "The CDC-13 warning is waived, this is on the reset path and safe to ignore" -tags "10930" -scope -internal -to [get_pins -hier -filter {name =~ */*top*/*/*SERDES_RESET*}] -timestamp "Thu Mar 18 12:27:48 GMT 2021"


create_waiver -type CDC -id {CDC-13} -user "cmac_usplus" -desc "The CDC-13 warning is waived; Syncer is available in this path but it is falsely reported by the tool" -tags "10930" -scope -internal -from [get_pins -of [get_cells -hier -filter {name =~ */inst/*cmac_cdc_sync*/s_out_d*}] -filter {name =~ *C}] -timestamp "Thu Mar 18 12:27:48 GMT 2021"




####################################################################################
# Constraints from file : 'design_1_cmac_usplus_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'rtl_kernel_wizard_0_user.xdc'
####################################################################################

# This is a generated file. Use and modify at your own risk.
################################################################################

# Usage: Custom kernel level constraints can be added to this file.


# Example multicycle constraint on reset to inst_example:
# Multicycle paths can be used on the reset register to help with timing closure on designs with
# high reset fanouts.  To ensure the reset register is not optimized out, add a DONT_TOUCH = "yes"
# or KEEP = "yes" attribute to the register inside the RTL code.
# set_multicycle_path -setup 3 -hold 2 [get_cells inst_example/areset_reg]


####################################################################################
# Constraints from file : 'xpm_cdc_async_rst.tcl'
####################################################################################

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_nodes/m00_ar_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_exit_pipeline/m00_exit/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_exit_pipeline/m01_exit/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_exit_pipeline/m02_exit/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_exit_pipeline/m03_exit/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_entry_pipeline/s00_mmu/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_entry_pipeline/s00_transaction_regulator/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_entry_pipeline/s00_si_converter/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_nodes/s00_w_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_nodes/s00_w_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_nodes/s00_r_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_nodes/s00_r_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_nodes/s00_b_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_nodes/s00_b_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_nodes/s00_aw_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_nodes/s00_aw_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_nodes/s00_ar_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/s00_nodes/s00_ar_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_nodes/m03_w_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_nodes/m03_w_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_nodes/m03_r_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_nodes/m03_r_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_nodes/m03_b_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_nodes/m03_b_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_nodes/m03_aw_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_nodes/m03_aw_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_nodes/m03_ar_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m03_nodes/m03_ar_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_nodes/m02_w_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_nodes/m02_w_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_nodes/m02_r_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_nodes/m02_r_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_nodes/m02_b_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_nodes/m02_b_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_nodes/m02_aw_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_nodes/m02_aw_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_nodes/m02_ar_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m02_nodes/m02_ar_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_nodes/m01_w_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_nodes/m01_w_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_nodes/m01_r_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_nodes/m01_r_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_nodes/m01_b_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_nodes/m01_b_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_nodes/m01_aw_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_nodes/m01_aw_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_nodes/m01_ar_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m01_nodes/m01_ar_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_nodes/m00_w_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_nodes/m00_w_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_nodes/m00_r_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_nodes/m00_r_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_nodes/m00_b_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_nodes/m00_b_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_nodes/m00_aw_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_nodes/m00_aw_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_0/inst/m00_nodes/m00_ar_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_nodes/m00_ar_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_entry_pipeline/s00_si_converter/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_nodes/s00_w_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_nodes/s00_w_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_nodes/s00_r_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_nodes/s00_r_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_nodes/s00_b_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_nodes/s00_b_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_nodes/s00_aw_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_nodes/s00_aw_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_nodes/s00_ar_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_nodes/s00_ar_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_nodes/m01_w_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_nodes/m01_w_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_nodes/m01_r_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_nodes/m01_r_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_nodes/m01_b_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_nodes/m01_b_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_nodes/m01_aw_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_nodes/m01_aw_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_nodes/m01_ar_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_nodes/m01_ar_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_nodes/m00_w_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_nodes/m00_w_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_nodes/m00_r_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_nodes/m00_r_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_nodes/m00_b_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_nodes/m00_b_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_nodes/m00_aw_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_nodes/m00_aw_node/inst/m_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_nodes/m00_ar_node/inst/s_sc_xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m00_exit_pipeline/m00_exit/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/m01_exit_pipeline/m01_exit/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_entry_pipeline/s00_mmu/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]

# Scoped constraints for xpm_cdc_async_rst
current_instance -quiet
current_instance inst_design_1/smartconnect_1/inst/s00_entry_pipeline/s00_transaction_regulator/inst/xpm_cdc_async_rst_inst
set_false_path -through [get_ports -scoped_to_current_instance -no_traverse src_arst]


####################################################################################
# Constraints from file : 'xpm_cdc_sync_rst.tcl'
####################################################################################

# Scoped constraints for xpm_cdc_srst
current_instance -quiet
current_instance inst_example/inst_example_vadd_A/inst_adder/inst_xpm_fifo_axis/gaxis_rst_sync.xpm_cdc_sync_rst_inst
set_false_path -to [get_cells {syncstages_ff_reg[0]}]



####################################################################################
# Constraints from file : 'xpm_fifo_rst_axis.tcl'
####################################################################################

# Scoped constraints for xpm_fifo
#if {([llength [ get_cells -hier *src_gray_ff_reg* -quiet]] > 0)} {
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *wr_rst_i_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#wr_rst_rd_reg[*]/D}]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *rd_rst_d3_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#}




####################################################################################
# Constraints from file : 'xpm_fifo_rst.tcl'
####################################################################################

# Scoped constraints for xpm_fifo
#if {([llength [ get_cells -hier *src_gray_ff_reg* -quiet]] > 0)} {
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *wr_rst_i_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#wr_rst_rd_reg[*]/D}]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *rd_rst_d3_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#}



# Scoped constraints for xpm_fifo
#if {([llength [ get_cells -hier *src_gray_ff_reg* -quiet]] > 0)} {
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *wr_rst_i_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#wr_rst_rd_reg[*]/D}]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *rd_rst_d3_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#}




####################################################################################
# Constraints from file : 'xpm_memory_xdc.tcl'
####################################################################################

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory

# Scoped constraints for xpm_memory


# Vivado Generated miscellaneous constraints 

#revert back to original instance
current_instance -quiet
