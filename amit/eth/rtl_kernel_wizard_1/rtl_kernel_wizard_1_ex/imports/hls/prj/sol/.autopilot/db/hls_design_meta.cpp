#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("mac0_m_TDATA", 512, hls_out, 0, "axis", "out_data", 1),
	Port_Property("mac0_m_TVALID", 1, hls_out, 2, "axis", "out_vld", 1),
	Port_Property("mac0_m_TREADY", 1, hls_in, 2, "axis", "out_acc", 1),
	Port_Property("mac0_m_TKEEP", 64, hls_out, 1, "axis", "out_data", 1),
	Port_Property("mac0_m_TLAST", 1, hls_out, 2, "axis", "out_data", 1),
	Port_Property("mac0_s_TDATA", 512, hls_in, 3, "axis", "in_data", 1),
	Port_Property("mac0_s_TVALID", 1, hls_in, 5, "axis", "in_vld", 1),
	Port_Property("mac0_s_TREADY", 1, hls_out, 5, "axis", "in_acc", 1),
	Port_Property("mac0_s_TKEEP", 64, hls_in, 4, "axis", "in_data", 1),
	Port_Property("mac0_s_TLAST", 1, hls_in, 5, "axis", "in_data", 1),
	Port_Property("mac1_m_TDATA", 512, hls_out, 6, "axis", "out_data", 1),
	Port_Property("mac1_m_TVALID", 1, hls_out, 8, "axis", "out_vld", 1),
	Port_Property("mac1_m_TREADY", 1, hls_in, 8, "axis", "out_acc", 1),
	Port_Property("mac1_m_TKEEP", 64, hls_out, 7, "axis", "out_data", 1),
	Port_Property("mac1_m_TLAST", 1, hls_out, 8, "axis", "out_data", 1),
	Port_Property("mac1_s_TDATA", 512, hls_in, 9, "axis", "in_data", 1),
	Port_Property("mac1_s_TVALID", 1, hls_in, 11, "axis", "in_vld", 1),
	Port_Property("mac1_s_TREADY", 1, hls_out, 11, "axis", "in_acc", 1),
	Port_Property("mac1_s_TKEEP", 64, hls_in, 10, "axis", "in_data", 1),
	Port_Property("mac1_s_TLAST", 1, hls_in, 11, "axis", "in_data", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "rtl_kernel_wizard_1";
